<?php

namespace WooMS;

if (!defined('ABSPATH')) {
    exit; // Exit if accessed directly
}


/**
 * Import Product Images
 */
class SiteHealth
{


    public static $plugin_dir = ABSPATH . "wp-content/plugins/";
    public static $base_plugin_url = "wooms/wooms.php";
    public static $xt_plugin_url = "wooms-extra/wooms-extra.php";
    public static $settings_page_url = 'admin.php?page=mss-settings';
    public static $wooms_check_login_password;
    public static $wooms_check_woocommerce_version_for_wooms;



    public static function init()
    {
        add_filter('site_status_tests', [__CLASS__, 'new_health_tests']);

        add_action('wp_ajax_health-check-wooms-check_login_password', [__CLASS__, 'wooms_check_login_password']);

        add_action('wp_ajax_health-check-wooms-check_webhooks', [__CLASS__, 'wooms_check_webhooks']);
    }

    /**
     * adding hooks for site health
     *
     * @param [type] $tests
     * @return void
     */
    public static function new_health_tests($tests)
    {

        $tests['direct']['wooms_check_woocommerce_version_for_wooms'] = [
            'test'  => [__CLASS__, 'wooms_check_woocommerce_version_for_wooms'],
        ];

        $tests['direct']['wooms_check_different_versions'] = [
            'test'  => [__CLASS__, 'wooms_check_different_versions_of_plugins'],
        ];

        $tests['async']['wooms_check_credentials'] = [
            'test'  => 'wooms_check_login_password',
        ];

        $tests['async']['wooms_check_webhooks'] = [
            'test'  => 'wooms_check_webhooks',
        ];

        return $tests;
    }

    /**
     * Checking version WooCommerce
     *
     * @return void
     */
    public static function wooms_check_woocommerce_version_for_wooms()
    {

        $wc_version = WC()->version;
        $result = [
            'label' => '–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ WooCommerce –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–ª–∞–≥–∏–Ω–∞ WooMS & WooMS XT',
            'status'      => 'good',
            'badge'       => [
                'label' => '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ WooMS',
                'color' => 'blue',
            ],
            'description' => sprintf('–í—Å–µ —Ö–æ—Ä–æ—à–æ! –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à –ø–ª–∞–≥–∏–Ω %s', 'üôÇ'),
            'test' => 'wooms_check_woocommerce_version_for_wooms' // this is only for class in html block
        ];

        if (version_compare($wc_version, '3.6.0', '<=')) {
            $result['status'] = 'critical';
            $result['badge']['color'] = 'red';
            $result['actions'] = sprintf(
                '<p><a href="%s">%s</a></p>',
                admin_url('plugins.php'),
                sprintf("–û–±–Ω–æ–≤–∏—Ç—å WooCommerce")
            );
            $result['description'] = sprintf('–í–∞—à–∞ –≤–µ—Ä—Å–∏—è WooCommerce –ø–ª–∞–≥–∏–Ω–∞ %s. –û–±–Ω–æ–≤–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ WooCommerce —á—Ç–æ–±—ã WooMS & WooMS XT —Ä–∞–±–æ—Ç–∞–ª–∏ ', $wc_version);
        }

        return $result;
    }

    /**
     * check differences of versions
     *
     * @return void
     */
    public static function wooms_check_different_versions_of_plugins()
    {

        $base_plugin_data = get_plugin_data(self::$plugin_dir . self::$base_plugin_url);
        $xt_plugin_data = get_plugin_data(self::$plugin_dir . self::$xt_plugin_url);
        $base_version = $base_plugin_data['Version'];
        $xt_version = $xt_plugin_data['Version'];

        $result = [
            'label' => '–†–∞–∑–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –ø–ª–∞–≥–∏–Ω–∞ WooMS & WooMS XT',
            'status'      => 'good',
            'badge'       => [
                'label' => '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ WooMS',
                'color' => 'blue',
            ],
            'description' => sprintf('–í—Å–µ —Ö–æ—Ä–æ—à–æ! –°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à –ø–ª–∞–≥–∏–Ω %s', 'üôÇ'),
            'test' => 'wooms_check_different_versions' // this is only for class in html block
        ];

        if ($base_version !== $xt_version) {
            $result['status'] = 'critical';
            $result['badge']['color'] = 'red';
            $result['actions'] = sprintf(
                '<p><a href="%s">%s</a></p>',
                admin_url('plugins.php'),
                sprintf("–û–±–Ω–æ–≤–∏—Ç—å –ø–ª–∞–≥–∏–Ω")
            );
        }

        /**
         * if base version is lower
         */
        if ($base_version < $xt_version) {

            $result['description'] = sprintf('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ –ø–ª–∞–≥–∏–Ω %s –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', $base_plugin_data['Name']);
        }

        /**
         * if xt version is lower
         */
        if ($base_version > $xt_version) {
            $result['description'] = sprintf('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ –ø–ª–∞–≥–∏–Ω %s –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', $xt_plugin_data['Name']);
        }

        return $result;
    }

    /**
     * checking credentials
     *
     * @return void
     */
    public static function wooms_check_login_password()
    {
        check_ajax_referer('health-check-site-status');

        if (!current_user_can('view_site_health_checks')) {
            wp_send_json_error();
        }

        $base_plugin_data = get_plugin_data(self::$plugin_dir . self::$base_plugin_url);
        $url = 'https://online.moysklad.ru/api/remap/1.2/security/token';
        $data_api = wooms_request($url, [], 'POST');

        $result = [
            'label' => "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è –ú–æ–π–°–∫–ª–∞–¥",
            'status'      => 'good',
            'badge'       => [
                'label' => '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ WooMS',
                'color' => 'blue',
            ],
            'description' => sprintf("–í—Å–µ —Ö–æ—Ä–æ—à–æ! –°–ø–∞—Å–∏–±–æ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –Ω–∞—à –ø–ª–∞–≥–∏–Ω %s", 'üôÇ'),
            'test' => 'wooms_check_credentials' // this is only for class in html block
        ];

        if (!array_key_exists('errors', $data_api)) {
            wp_send_json_success($result);
        }

        if (array_key_exists('errors', $data_api)) {
            $result['status'] = 'critical';
            $result['badge']['color'] = 'red';
            $result['description'] = sprintf("–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –ú–æ–π–°–∫–ª–∞–¥", 'ü§î');
        }

        /**
         * 1056 is mean that login or the password is not correct
         */
        if ($data_api["errors"][0]['code'] === 1056) {
            $result['description'] = sprintf("–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å –æ—Ç –ú–æ–π–°–∫–ª–∞–¥ %s", 'ü§î');
            $result['actions'] = sprintf(
                '<p><a href="%s">%s</a></p>',
                self::$settings_page_url,
                sprintf("–ü–æ–º–µ–Ω—è—Ç—å –¥–æ—Å—Ç—É–ø—ã")
            );
        }

        set_transient('wooms_check_login_password', true, 60 * 30);

        wp_send_json_success($result);
    }

    /**
     * Check can we add webhooks
     *
     * @return bool
     */
    public static function wooms_check_webhooks()
    {
        $url  = 'https://online.moysklad.ru/api/remap/1.2/entity/webhook';

        $employee_url = 'https://online.moysklad.ru/api/remap/1.1/context/employee';

        // —Å–æ–∑–¥–∞–µ–º –≤–µ–± —Ö—É–∫ –≤ –ú–æ–π–°–∫–ª–∞–¥
        $data   = array(
            'url'        => rest_url('/wooms/v1/order-update/'),
            'action'     => "UPDATE",
            "entityType" => "customerorder",
        );
        $api_result = wooms_request($url, $data);

        $result = [
            'label' => "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ú–æ–π–°–∫–ª–∞–¥",
            'status'      => 'good',
            'badge'       => [
                'label' => '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ WooMS',
                'color' => 'blue',
            ],
            'description' => sprintf("–í—Å–µ —Ö–æ—Ä–æ—à–æ! –°–ø–∞—Å–∏–±–æ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –Ω–∞—à –ø–ª–∞–≥–∏–Ω %s", 'üôÇ'),
            'test' => 'wooms_check_weebhooks' // this is only for class in html block
        ];


        if (!empty($api_result['errors'])) {

            $result['status'] = 'critical';
            $result['badge']['color'] = 'red';
            $result['description'] = sprintf("%s %s", $api_result['errors'][0]['error'], '‚ùå');
        }

        // Checking permissions too
        $data_api_p = wooms_request($employee_url, [], 'GET');

        foreach ($data_api_p['permissions']['webhook'] as $permission) {
            if (!$permission) {
                $description = "–£ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–µ–±—Ö—É–∫–∞–º–∏";
                $result['description'] = sprintf('%s %s', $description, '‚ùå');
                if (!empty($api_result['errors'])) {
                    $result['description'] = sprintf("1. %s 2. %s %s", $api_result['errors'][0]['error'], $description, '‚ùå');
                }
            }

            // –î–æ–±–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–∫–∏ –≤ –∑–¥–∞—Ä–æ–≤—å–µ —Å–∞–π—Ç–∞
            set_transient('wooms_check_moysklad_tariff', $result['description'], 60 * 60);
        }

        wp_send_json_success($result);
    }
}

SiteHealth::init();
